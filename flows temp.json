[
    {
        "id": "bccd8b5d240f8b66",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "tls_config",
        "type": "tls-config",
        "name": "Local CA",
        "cert": "",
        "key": "",
        "ca": "C:\\Users\\nahia\\.node-red\\certs\\broker.crt",
        "verifyservercert": true
    },
    {
        "id": "mqtt_broker_tls",
        "type": "mqtt-broker",
        "name": "Local TLS Broker",
        "broker": "localhost",
        "port": "8883",
        "tls": "tls_config",
        "clientid": "nodered_pub",
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": ""
    },
    {
        "id": "aa1919f00b498810",
        "type": "ui_tab",
        "name": "MQTT Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "bf4298c8f0402a55",
        "type": "ui_group",
        "name": "Controls",
        "tab": "aa1919f00b498810",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbdeb71c96af7e5f",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "f642a2dac67641e6",
        "type": "mqtt-broker",
        "name": "Local MQTT Broker",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 15,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6d217635ac5849a1",
        "type": "ui_tab",
        "name": "Factory Dashboard",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "17c6bff855803631",
        "type": "ui_group",
        "name": "Machine",
        "tab": "6d217635ac5849a1",
        "order": 1,
        "disp": true,
        "width": "10"
    },
    {
        "id": "29b8a9bb3d74ecf7",
        "type": "ui_tab",
        "name": "Machine Panel",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c6ab9b83f02e35b3",
        "type": "ui_group",
        "name": "Machine Indicators",
        "tab": "29b8a9bb3d74ecf7",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7c0936805bb0d669",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "518389f387da180e",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 9,
        "width": 4,
        "height": 1
    },
    {
        "id": "94d47917e4be3c98",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "91881b09a2d4f7d8",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "a6fc1c0fa1200bac",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 13,
        "width": 3,
        "height": 1
    },
    {
        "id": "a7ad1b21e06c6bc1",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "0beacaa9ff496c2e",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 15,
        "width": 3,
        "height": 1
    },
    {
        "id": "0ba3c7096aa946c7",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "fee32570293cd49e",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 18,
        "width": 3,
        "height": 1
    },
    {
        "id": "62ff7df0c64107b9",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 19,
        "width": 4,
        "height": 1
    },
    {
        "id": "6db5eea2037b94d5",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 20,
        "width": 3,
        "height": 1
    },
    {
        "id": "02db09ec29e732d6",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 21,
        "width": 4,
        "height": 1
    },
    {
        "id": "6dbebf11a8ac1c39",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 22,
        "width": 3,
        "height": 1
    },
    {
        "id": "d6cd09ebcb910e39",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 23,
        "width": 4,
        "height": 1
    },
    {
        "id": "5707ef178ea0415a",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 24,
        "width": 3,
        "height": 1
    },
    {
        "id": "0881963177985821",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "6b50703d9e594dd8",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 27,
        "width": 3,
        "height": 1
    },
    {
        "id": "65fbcdea37d6602b",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 28,
        "width": 2,
        "height": 1
    },
    {
        "id": "662491d0b3d12225",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 29,
        "width": 3,
        "height": 1
    },
    {
        "id": "6568313964427b98",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 30,
        "width": 2,
        "height": 1
    },
    {
        "id": "065bfd5a17e7900f",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 31,
        "width": 3,
        "height": 1
    },
    {
        "id": "c8f18498f8a73961",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 32,
        "width": 2,
        "height": 1
    },
    {
        "id": "fa56c291408eaa02",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 33,
        "width": 3,
        "height": 1
    },
    {
        "id": "5b863f4990c0a35d",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 34,
        "width": 2,
        "height": 1
    },
    {
        "id": "6efaf754c1ced0c4",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 35,
        "width": 3,
        "height": 1
    },
    {
        "id": "d7061669add09c87",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 36,
        "width": 2,
        "height": 1
    },
    {
        "id": "854444a5ac3722c5",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 37,
        "width": 3,
        "height": 1
    },
    {
        "id": "7d149674a6d2516c",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 38,
        "width": 2,
        "height": 1
    },
    {
        "id": "57e69f665099e239",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 39,
        "width": 3,
        "height": 1
    },
    {
        "id": "03d329667d998ad6",
        "type": "ui_spacer",
        "z": "bccd8b5d240f8b66",
        "name": "spacer",
        "group": "bf4298c8f0402a55",
        "order": 42,
        "width": 10,
        "height": 1
    },
    {
        "id": "946438efc15a577c",
        "type": "ui_switch",
        "z": "bccd8b5d240f8b66",
        "name": "LED Control",
        "label": "LED Control",
        "group": "bf4298c8f0402a55",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": true,
        "topic": "home/led",
        "onvalue": "ON",
        "onvalueType": "str",
        "offvalue": "OFF",
        "offvalueType": "str",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "af9459c8ae396079"
            ]
        ]
    },
    {
        "id": "af9459c8ae396079",
        "type": "mqtt out",
        "z": "bccd8b5d240f8b66",
        "name": "Publish LED TLS",
        "topic": "home/led",
        "qos": "0",
        "retain": false,
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker_tls",
        "x": 420,
        "y": 120,
        "wires": []
    },
    {
        "id": "30882a2df0ff74c5",
        "type": "mqtt in",
        "z": "bccd8b5d240f8b66",
        "name": "Subscribe LED TLS",
        "topic": "home/led",
        "qos": "0",
        "datatype": "auto",
        "broker": "mqtt_broker_tls",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "38a0c6ec5074812a"
            ]
        ]
    },
    {
        "id": "38a0c6ec5074812a",
        "type": "ui_led",
        "z": "bccd8b5d240f8b66",
        "order": 2,
        "group": "bf4298c8f0402a55",
        "width": 3,
        "height": 1,
        "label": "LED Status",
        "labelPlacement": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "OFF",
                "valueType": "str"
            },
            {
                "color": "#008000",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 420,
        "y": 200,
        "wires": []
    },
    {
        "id": "c3e031dbb68ada2b",
        "type": "mqtt in",
        "z": "bccd8b5d240f8b66",
        "name": "",
        "topic": "sonarT",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "mqtt_broker_tls",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 280,
        "wires": [
            [
                "0769f3032265cf1a"
            ]
        ]
    },
    {
        "id": "0769f3032265cf1a",
        "type": "switch",
        "z": "bccd8b5d240f8b66",
        "name": "checkMsg",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PO",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 280,
        "wires": [
            [
                "b2353fccbd03c180",
                "cb32a0b621f3b54c"
            ],
            [
                "349e46b9c5f90bfe",
                "2d16795ce0f3fa26"
            ]
        ]
    },
    {
        "id": "b2353fccbd03c180",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Red On",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "7bad4cde6410e578"
            ]
        ]
    },
    {
        "id": "349e46b9c5f90bfe",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Green On",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ON",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 440,
        "wires": [
            [
                "f477ce25aa188cbd"
            ]
        ]
    },
    {
        "id": "7bad4cde6410e578",
        "type": "ui_led",
        "z": "bccd8b5d240f8b66",
        "order": 3,
        "group": "bf4298c8f0402a55",
        "width": 3,
        "height": 1,
        "label": "LED Status",
        "labelPlacement": "left",
        "colorForValue": [
            {
                "color": "#ff004c",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 810,
        "y": 240,
        "wires": []
    },
    {
        "id": "f477ce25aa188cbd",
        "type": "ui_led",
        "z": "bccd8b5d240f8b66",
        "order": 4,
        "group": "bf4298c8f0402a55",
        "width": 5,
        "height": 1,
        "label": "",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "#37ff00",
                "value": "ON",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 770,
        "y": 440,
        "wires": []
    },
    {
        "id": "2d16795ce0f3fa26",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Red FF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 380,
        "wires": [
            [
                "7bad4cde6410e578"
            ]
        ]
    },
    {
        "id": "cb32a0b621f3b54c",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Green Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 280,
        "wires": [
            [
                "f477ce25aa188cbd"
            ]
        ]
    },
    {
        "id": "4d85d5ceec6dff27",
        "type": "mqtt in",
        "z": "bccd8b5d240f8b66",
        "name": "Machine Status Subscriber",
        "topic": "sonarT",
        "qos": "0",
        "datatype": "auto",
        "broker": "f642a2dac67641e6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 580,
        "wires": [
            [
                "4ebbd535fb6650ae"
            ]
        ]
    },
    {
        "id": "4ebbd535fb6650ae",
        "type": "switch",
        "z": "bccd8b5d240f8b66",
        "name": "Check PO / PS",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PO",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 580,
        "wires": [
            [
                "98369fac3f8dc70b"
            ],
            [
                "1fc19ea2962c2074"
            ]
        ]
    },
    {
        "id": "98369fac3f8dc70b",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "PO → Red ON, Blue OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"red\":\"ON\",\"blue\":\"OFF\"}",
                "tot": "json"
            }
        ],
        "x": 620,
        "y": 560,
        "wires": [
            [
                "070f083103d11b4e"
            ]
        ]
    },
    {
        "id": "1fc19ea2962c2074",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "PS → Blue ON, Red OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"red\":\"OFF\",\"blue\":\"ON\"}",
                "tot": "json"
            }
        ],
        "x": 620,
        "y": 600,
        "wires": [
            [
                "070f083103d11b4e"
            ]
        ]
    },
    {
        "id": "070f083103d11b4e",
        "type": "split",
        "z": "bccd8b5d240f8b66",
        "name": "Split LEDs",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 830,
        "y": 580,
        "wires": [
            [
                "dad9ad7d009dc194"
            ]
        ]
    },
    {
        "id": "dad9ad7d009dc194",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Set topic to key name",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "parts.key",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "x": 1060,
        "y": 580,
        "wires": [
            [
                "3d436deb0470b317"
            ]
        ]
    },
    {
        "id": "3d436deb0470b317",
        "type": "ui_template",
        "z": "bccd8b5d240f8b66",
        "group": "bf4298c8f0402a55",
        "name": "",
        "order": 6,
        "width": 7,
        "height": 4,
        "format": "<div style=\"position:relative; width:100%; height:200px; margin:0 auto; background:#ccc; border:2px solid #333; border-radius:8px; background-image: url('/sonar.png'); background-size: cover; background-position: center;\">\n  <!-- Machine Box Overlay Text -->\n  <div style=\"position:absolute; width:100%; height:100%; display:flex; align-items:center; justify-content:center; font-weight:bold; font-size:18px; color:#333;\">\n    \n  </div>\n\n  <!-- LEDs -->\n  <div id=\"red-led\" class=\"led\" data-name=\"red\"></div>\n  <div id=\"blue-led\" class=\"led\" data-name=\"blue\"></div>\n</div>\n\n<style>\n  .led {\n    position: absolute;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    background: #111;\n    box-shadow: 0 0 6px rgba(0,0,0,0.8);\n    transition: background 0.2s, box-shadow 0.2s;\n    transform: translate(-50%, -50%);\n  }\n\n  .led.on.red { background:#ff2b2b; box-shadow:0 0 15px rgba(255,43,43,0.9); }\n  .led.on.blue { background:#37ff00; box-shadow:0 0 15px rgba(55,255,0,0.9); }\n\n  /* Position LEDs on the box */\n  #red-led { left:25%; top:30%; }\n  #blue-led { left:75%; top:30%; }\n</style>\n\n<script>\n(function(scope){\n  function setLed(name, state){\n    var el = document.querySelector('.led[data-name=\"'+name+'\"]');\n    if(!el) return;\n    if(String(state) === 'ON'){\n      el.classList.add('on');\n      el.classList.add(name);\n    } else {\n      el.classList.remove('on');\n      el.classList.remove(name);\n    }\n  }\n\n  scope.$watch('msg', function(msg){\n    if(!msg) return;\n    if(msg.topic && msg.payload !== undefined){\n      setLed(String(msg.topic).toLowerCase(), msg.payload);\n    }\n  });\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "Machine",
        "x": 1250,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "edc426b1da328663",
        "type": "comment",
        "z": "bccd8b5d240f8b66",
        "name": "Liquid Level",
        "info": "Liquid Level",
        "x": 670,
        "y": 640,
        "wires": []
    },
    {
        "id": "8b0722a1ad92b6ed",
        "type": "comment",
        "z": "bccd8b5d240f8b66",
        "name": "Fan ",
        "info": "Liquid Level",
        "x": 670,
        "y": 820,
        "wires": []
    },
    {
        "id": "7b71a515bb136ec0",
        "type": "function",
        "z": "bccd8b5d240f8b66",
        "name": "function 1",
        "func": "// Get current angle from flow context\nlet angle = flow.get(\"angle\") || 0;\n\n// Increment the angle by 10 degrees\nangle += 40;\nif(angle > 360) angle = 0;\n\n// Save it back to flow context\nflow.set(\"angle\", angle);\n\n// Send the angle as payload\nmsg.payload = angle;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 780,
        "wires": [
            [
                "e399642fa3ec8a4a"
            ]
        ]
    },
    {
        "id": "e399642fa3ec8a4a",
        "type": "ui_template",
        "z": "bccd8b5d240f8b66",
        "group": "bf4298c8f0402a55",
        "name": "",
        "order": 10,
        "width": 9,
        "height": 3,
        "format": "<img id=\"rotor\" src=\"/fan.png\" style=\"width:100px; transition: transform 0.2s;\">\n\n<script>\n    (function(scope){\n  scope.$watch('msg', function(msg){\n    if(msg.payload !== undefined){\n      document.getElementById('rotor').style.transform = 'rotate(' + msg.payload + 'deg)';\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 800,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "d91007e2f0480d78",
        "type": "inject",
        "z": "bccd8b5d240f8b66",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 780,
        "wires": [
            [
                "7b71a515bb136ec0"
            ]
        ]
    },
    {
        "id": "eb49a38777f6aa98",
        "type": "comment",
        "z": "bccd8b5d240f8b66",
        "name": "Fan ",
        "info": "Liquid Level",
        "x": 650,
        "y": 1100,
        "wires": []
    },
    {
        "id": "8ee653b6d0a45467",
        "type": "mqtt in",
        "z": "bccd8b5d240f8b66",
        "name": "Bowl Temp Subscriber",
        "topic": "bowlT",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "f642a2dac67641e6",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 200,
        "y": 940,
        "wires": [
            [
                "253b2e2eafd71187"
            ]
        ]
    },
    {
        "id": "253b2e2eafd71187",
        "type": "switch",
        "z": "bccd8b5d240f8b66",
        "name": "Check FS/ FO",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FS",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "FS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 940,
        "wires": [
            [
                "474fc65446a21922"
            ],
            [
                "c65295e6eead23de"
            ]
        ]
    },
    {
        "id": "57c1dc1055a11655",
        "type": "function",
        "z": "bccd8b5d240f8b66",
        "name": "function 4",
        "func": "// Initialize angle if not set\nlet angle = flow.get(\"angle\") || 0;\n\n// Get fan speed from slider\nlet fanSpeed =120;\n\n// Update angle\nangle += fanSpeed;\n// angle = angle % 360;\nif(angle > 360) angle = 0;\nflow.set(\"angle\", angle);\n\n// Send messages for fan rotation and status\nlet fanMsg = { payload: angle };\nlet statusMsg = { payload: \"Fan ON\" };\nreturn [fanMsg, statusMsg];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 900,
        "wires": [
            [
                "f30e3b04668bdeae"
            ],
            [
                "49ecec10528f8336"
            ]
        ]
    },
    {
        "id": "f30e3b04668bdeae",
        "type": "ui_template",
        "z": "bccd8b5d240f8b66",
        "group": "bf4298c8f0402a55",
        "name": "",
        "order": 7,
        "width": 6,
        "height": 4,
        "format": "<div style=\"position:relative; width:150px; height:150px; margin:0 auto;\">\n  <img id=\"fan\" src=\"/fan.png\" style=\"width:100%; transition: transform 0.2s;\">\n</div>\n\n<script>\n  (function(scope) {\n  scope.$watch('msg', function(msg) {\n    if(!msg) return;\n    var angle = msg.payload || 0;\n    var fan = document.getElementById('fan');\n    if(fan) fan.style.transform = 'rotate(' + angle + 'deg)';\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1160,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "49ecec10528f8336",
        "type": "ui_text",
        "z": "bccd8b5d240f8b66",
        "group": "bf4298c8f0402a55",
        "order": 8,
        "width": 3,
        "height": 4,
        "name": "",
        "label": "is Fan needed?",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1200,
        "y": 980,
        "wires": []
    },
    {
        "id": "474fc65446a21922",
        "type": "trigger",
        "z": "bccd8b5d240f8b66",
        "name": "Fan Rotation Trigger",
        "op1": "1",
        "op2": "",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 740,
        "y": 900,
        "wires": [
            [
                "57c1dc1055a11655"
            ]
        ]
    },
    {
        "id": "c65295e6eead23de",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Fan OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Fan OFF",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 980,
        "wires": [
            [
                "474fc65446a21922",
                "49ecec10528f8336"
            ]
        ]
    },
    {
        "id": "0842dd5a5471ca4d",
        "type": "ui_text",
        "z": "bccd8b5d240f8b66",
        "group": "bf4298c8f0402a55",
        "order": 17,
        "width": 9,
        "height": 4,
        "name": "",
        "label": "",
        "format": "if Level is below -->  Green Led On --> Water Pump On",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 370,
        "y": 1040,
        "wires": []
    },
    {
        "id": "dce3409acc279342",
        "type": "comment",
        "z": "bccd8b5d240f8b66",
        "name": "SugarT",
        "info": "",
        "x": 230,
        "y": 1200,
        "wires": []
    },
    {
        "id": "badc2254544603cf",
        "type": "mqtt in",
        "z": "bccd8b5d240f8b66",
        "name": "SugarT Subscriber",
        "topic": "sugarT",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "mqtt_broker_tls",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "4271c5692c15e1ff"
            ]
        ]
    },
    {
        "id": "4271c5692c15e1ff",
        "type": "switch",
        "z": "bccd8b5d240f8b66",
        "name": "Check FFC / FFO",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FFC",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FFO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 1280,
        "wires": [
            [
                "2e971c47eae86124",
                "5167f308f19d09b2"
            ],
            [
                "8ea03ab49aaf3915",
                "776e85f63427f1ca"
            ]
        ]
    },
    {
        "id": "2e971c47eae86124",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Green On",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ON",
                "tot": "str"
            }
        ],
        "x": 660,
        "y": 1240,
        "wires": [
            [
                "3dd7d86caf83fc5e"
            ]
        ]
    },
    {
        "id": "5167f308f19d09b2",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Red Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "x": 660,
        "y": 1280,
        "wires": [
            [
                "f8fb48baa4f62e63"
            ]
        ]
    },
    {
        "id": "8ea03ab49aaf3915",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Red On",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ON",
                "tot": "str"
            }
        ],
        "x": 660,
        "y": 1320,
        "wires": [
            [
                "f8fb48baa4f62e63"
            ]
        ]
    },
    {
        "id": "776e85f63427f1ca",
        "type": "change",
        "z": "bccd8b5d240f8b66",
        "name": "Green Off",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "OFF",
                "tot": "str"
            }
        ],
        "x": 660,
        "y": 1360,
        "wires": [
            [
                "3dd7d86caf83fc5e"
            ]
        ]
    },
    {
        "id": "3dd7d86caf83fc5e",
        "type": "ui_led",
        "z": "bccd8b5d240f8b66",
        "order": 40,
        "group": "bf4298c8f0402a55",
        "width": 3,
        "height": 1,
        "label": "Sugar Green",
        "labelPlacement": "left",
        "colorForValue": [
            {
                "color": "#00ff00",
                "value": "ON",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "OFF",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 860,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f8fb48baa4f62e63",
        "type": "ui_led",
        "z": "bccd8b5d240f8b66",
        "order": 41,
        "group": "bf4298c8f0402a55",
        "width": 3,
        "height": 1,
        "label": "Sugar Red",
        "labelPlacement": "left",
        "colorForValue": [
            {
                "color": "#ff0000",
                "value": "ON",
                "valueType": "str"
            },
            {
                "color": "#808080",
                "value": "OFF",
                "valueType": "str"
            }
        ],
        "allowColorForValueInMessage": false,
        "shape": "circle",
        "showGlow": true,
        "name": "",
        "x": 860,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7c497982d2096fb9",
        "type": "ui_template",
        "z": "bccd8b5d240f8b66",
        "group": "bf4298c8f0402a55",
        "name": "New Tank Status (FFC/FFO Copy)",
        "order": 26,
        "width": 11,
        "height": 7,
        "format": "<div style=\"text-align:center;\">\n  <h3><b>Sugar Status</b></h3>\n  <img src=\"/sugarX.png\" alt=\"Tank Image\" style=\"width:80%;border-radius:10px;box-shadow:0 0 10px #aaa;\">\n  <div style=\"margin-top:10px;display:flex;justify-content:center;gap:20px;\">\n    <div>\n      <div id=\"ledGreenNew\"\n        style=\"width:25px;height:25px;border-radius:50%;background-color:gray;border:2px solid #444;\"></div>\n      <p style=\"margin-top:5px;font-weight:bold;color:green;\">Sugar level Low, Fermentation Complete</p>\n    </div>\n    <div>\n      <div id=\"ledRedNew\" style=\"width:25px;height:25px;border-radius:50%;background-color:gray;border:2px solid #444;\">\n      </div>\n      <p style=\"margin-top:5px;font-weight:bold;color:red;\">Fermentation Running</p>\n    </div>\n  </div>\n</div>\n\n<script>\n  (function(scope) {\n    scope.$watch('msg.payload', function(data) {\n        if (data === undefined) return;\n        \n        // Simple logic copied from sugarT\n        if (data === \"FFC\") {\n            document.getElementById('ledGreenNew').style.backgroundColor = 'limegreen';\n            document.getElementById('ledRedNew').style.backgroundColor = 'gray';\n        } else if (data === \"FFO\") {\n            document.getElementById('ledGreenNew').style.backgroundColor = 'gray';\n            document.getElementById('ledRedNew').style.backgroundColor = 'red';\n        } else {\n            document.getElementById('ledGreenNew').style.backgroundColor = 'gray';\n            document.getElementById('ledRedNew').style.backgroundColor = 'gray';\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 560,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "886eb318cbed2f09",
        "type": "mqtt in",
        "z": "bccd8b5d240f8b66",
        "name": "Sugar Topic Subscriber (Copy)",
        "topic": "sugarT",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "f642a2dac67641e6",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 230,
        "y": 1580,
        "wires": [
            [
                "7c497982d2096fb9"
            ]
        ]
    },
    {
        "id": "5e22f9571d80bff4",
        "type": "ui_template",
        "z": "bccd8b5d240f8b66",
        "group": "bf4298c8f0402a55",
        "name": "CO2 Status (Fixed)",
        "order": 26,
        "width": 11,
        "height": 7,
        "format": "<div style=\"text-align:center;\">\n  <h3><b>CO₂ Status</b></h3>\n  <img src=\"/gas.png\" alt=\"Gas Image\" style=\"width:80%;border-radius:10px;box-shadow:0 0 10px #aaa;\">\n  <div style=\"margin-top:10px;display:flex;justify-content:center;gap:20px;\">\n    <div>\n      <div id=\"ledGreen_{{$id}}\" style=\"width:25px;height:25px;border-radius:50%;background-color:gray;border:2px solid #444;\"></div>\n      <p style=\"margin-top:5px;font-weight:bold;color:green;\">CO₂ High — Fermentation Active</p>\n    </div>\n    <div>\n      <div id=\"ledRed_{{$id}}\" style=\"width:25px;height:25px;border-radius:50%;background-color:gray;border:2px solid #444;\"></div>\n      <p style=\"margin-top:5px;font-weight:bold;color:red;\">CO₂ Low — Check Fermentation</p>\n    </div>\n  </div>\n</div>\n\n<script>\n(function(scope) {\n  scope.$watch('msg.payload', function(data) {\n    if (data === undefined) return;\n    const green = document.getElementById('ledGreen_' + scope.$id);\n    const red = document.getElementById('ledRed_' + scope.$id);\n    if (!green || !red) return; // DOM safety\n\n    if (data === 'AF') {\n      green.style.backgroundColor = 'limegreen';\n      red.style.backgroundColor = 'gray';\n    } else if (data === 'CF') {\n      green.style.backgroundColor = 'gray';\n      red.style.backgroundColor = 'red';\n    } else {\n      green.style.backgroundColor = 'gray';\n      red.style.backgroundColor = 'gray';\n    }\n  });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 490,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "926554db05942cdf",
        "type": "mqtt in",
        "z": "bccd8b5d240f8b66",
        "name": "CO₂ Topic",
        "topic": "CO2T",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "f642a2dac67641e6",
        "nl": false,
        "rap": false,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 1760,
        "wires": [
            [
                "5e22f9571d80bff4"
            ]
        ]
    },
    {
        "id": "aaa0c9c91dacc15d",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-dashboard": "3.6.6",
            "node-red-contrib-ui-led": "0.4.11"
        }
    }
]